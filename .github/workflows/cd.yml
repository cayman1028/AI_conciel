name: CD

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'デプロイ環境'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production
          - production-vercel
          - production-render

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: 'chatbot/package-lock.json'

      - name: Install dependencies
        run: |
          cd chatbot
          npm ci

      - name: Run tests
        run: |
          cd chatbot
          npm test -- --watchAll=false

      - name: Build
        run: |
          cd chatbot
          npm run build

      - name: Deploy to Vercel
        if: github.event.inputs.environment == 'production-vercel' || github.event.inputs.environment == 'production'
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./chatbot
          vercel-args: '--prod'
        id: vercel-deployment
        
      - name: Get Deployment URL
        if: github.event.inputs.environment == 'production-vercel' || github.event.inputs.environment == 'production'
        run: |
          echo "DEPLOYED_URL=${{ steps.vercel-deployment.outputs.preview-url }}" >> $GITHUB_ENV

      - name: Deploy to Render
        if: github.event.inputs.environment == 'production-render'
        run: |
          cd chatbot
          npx @render/cli deploy --api-key ${{ secrets.RENDER_API_KEY }}

      - name: Deploy to development
        if: github.event.inputs.environment == 'development'
        run: |
          cd chatbot
          echo "開発環境にデプロイしました"
          # 実際の開発環境デプロイコマンドをここに記述

      - name: Run post-deployment tests
        if: github.event.inputs.environment == 'production-vercel' || github.event.inputs.environment == 'production'
        run: |
          cd chatbot
          DEPLOYED_URL=${{ env.DEPLOYED_URL }} npm test -- src/ci-cd/__tests__/post-deploy.test.ts --watchAll=false
          
      - name: Generate deployment report
        if: always()
        run: |
          cd chatbot
          if [ -f deploy-log.json ]; then
            echo "デプロイ情報:"
            cat deploy-log.json
          fi

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "デプロイが成功しました！"
          else
            echo "デプロイに失敗しました。"
          fi 